import math

def get_key_order(key):
    return sorted(range(len(key)), key = lambda k: key[k])
    
def encrypt(msg, key):
    order = get_key_order(key)
    cols = len(key)
    rows = math.ceil(len(msg) / cols)
    msg += 'X' * (cols * rows - len(msg))
    
    grid = [msg[i:i+cols] for i in range (0, len(msg), cols)]
    
    return ''.join(''.join(row[i] for row in grid) for i in order)
    
def decrypt(cipher, key):
    order = get_key_order(key)
    cols = len(key)
    rows = math.ceil(len(cipher) / cols )
    
    grid = [[''] * cols for _ in range(rows)]
    k = 0
    
    for i in order:
        for r in range(rows):
            grid[r][i] += cipher[k]
            k += 1
    
    return ''.join(''.join(row) for row in grid).rstrip('X')
    
message = input("Enter the message: ").replace(" ", "").upper()
key = input("Enter the key: ").upper()

cipher = encrypt(message, key)
print("\nEncrypted: ", cipher)

plain = decrypt(cipher, key)
print("\nDecrypted: ", plain)
