# Ask user for number of queens
N = int(input("Enter number of queens: "))

# Create an N x N board initialized with 0s
board = [[0]*N for _ in range(N)]

# Check if it's safe to place a queen at board[row][col]
def is_safe(row, col):
    # Check this row on the left
    for i in range(col):
        if board[row][i] == 1:
            return False

    # Check upper-left diagonal
    i, j = row, col
    while i >= 0 and j >= 0:
        if board[i][j] == 1:
            return False
        i -= 1
        j -= 1

    # Check lower-left diagonal
    i, j = row, col
    while i < N and j >= 0:
        if board[i][j] == 1:
            return False
        i += 1
        j -= 1

    return True

# Recursive function to solve the N-Queens problem
def solve(col):
    if col >= N:
        return True  # All queens are placed

    for row in range(N):
        if is_safe(row, col):
            board[row][col] = 1  # Place queen

            if solve(col + 1):  # Recur to place next queen
                return True

            board[row][col] = 0  # Backtrack if placing queen leads to no solution

    return False

# Call the solver
if solve(0):
    print("Solution found:")
    for row in board:
        print(row)
else:
    print("No solution exists.")
